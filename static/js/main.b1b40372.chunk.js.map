{"version":3,"sources":["progress-steps.jsx","updateAction.js","steps/Step1.jsx","steps/Step2.jsx","steps/Step3.jsx","components/headings/H1.jsx","components/headings/H2.jsx","index.js"],"names":["ProgressSteps","stepNum","steps","1","2","3","stepsArray","Object","keys","className","map","step","Fragment","length","updateAction","state","payload","data","schema","yup","firstName","required","email","website","url","phone","budget","Step1","navigate","useNavigate","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","useStateMachine","actions","onSubmit","htmlFor","type","id","defaultValue","placeholder","name","value","style","visibility","service","Step2","watch","watchService","indexOf","onClick","description","Step3","alert","JSON","stringify","cols","rows","message","H1","H2","App","exact","path","element","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1b40372.chunk.js","sourcesContent":["import React from 'react'\n\nexport const ProgressSteps = ({ stepNum }) => {\n  const steps = {\n    1: 'Povedzte nám o vás',\n    2: 'S čím pomôžeme?',\n    3: 'Dodatočné informácie'\n  }\n\n  const stepsArray = Object.keys(steps)\n\n  return (\n    <section className=\"steps\">\n      {stepsArray.map(step => (\n        <React.Fragment key={step}>\n          <div\n            className={`step ${stepNum === +step ? 'active' : ''} ${\n              stepNum > +step ? 'completed' : ''\n            }`}\n          >\n            <div className=\"step-number\">{step}</div>\n            <p className=\"step-title\">{steps[step]}</p>\n          </div>\n          {step < stepsArray.length && <div className=\"progress-line\" />}\n        </React.Fragment>\n      ))}\n    </section>\n  )\n}\n","export default function updateAction(state, payload) {\n  return {\n    ...state,\n    data: {\n      ...state.data,\n      ...payload\n    }\n  }\n}\n","import { Link, useNavigate } from 'react-router-dom'\nimport { ProgressSteps } from '../progress-steps'\nimport { useForm } from 'react-hook-form'\nimport { useStateMachine } from 'little-state-machine'\nimport updateAction from '../updateAction'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\nconst schema = yup\n  .object({\n    firstName: yup.string().required(),\n    email: yup.string().email().required(),\n    website: yup.string().url().required(),\n    phone: yup.number().required(),\n    budget: yup.number().required()\n  })\n  .required()\n\nexport const Step1 = () => {\n  let navigate = useNavigate()\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(schema)\n  })\n  const { actions, state } = useStateMachine({ updateAction })\n  const onSubmit = data => {\n    actions.updateAction(data)\n    navigate('/step2')\n  }\n\n  return (\n    <>\n      <ProgressSteps stepNum={1} />\n      <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n        <div\n          className={`input-group required ${errors.firstName ? 'error' : ''}`}\n        >\n          <label htmlFor=\"name\">Meno a priezvisko</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            {...register('firstName')}\n            defaultValue={state.data.firstName}\n            placeholder=\"John Doe\"\n          />\n          {errors.firstName === 'required' && (\n            <span className=\"error-message\">This field is required</span>\n          )}\n        </div>\n        <div className={`input-group required ${errors.email ? 'error' : ''}`}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            {...register('email')}\n            defaultValue={state.data.email}\n            placeholder=\"your.adress@mail.com\"\n          />\n          {errors.email?.type === 'required' && (\n            <span className=\"error-message\">This field is required</span>\n          )}\n        </div>\n        <div className={`input-group required ${errors.phone ? 'error' : ''}`}>\n          <label htmlFor=\"phone\">Telefónne číslo</label>\n          <input\n            type=\"tel\"\n            id=\"phone\"\n            {...register('phone')}\n            defaultValue={state.data.phone}\n            placeholder=\"+421 123 345 678\"\n          />\n          {errors.phone?.type === 'required' && (\n            <span className=\"error-message\">This field is required</span>\n          )}\n        </div>\n        <div\n          className={`input-group required ${errors.website ? 'error' : ''}`}\n        >\n          <label htmlFor=\"website\">Odkaz na váš web</label>\n          <input\n            type=\"text\"\n            id=\"website\"\n            {...register('website')}\n            defaultValue={state.data.website}\n            placeholder=\"https://yourwebsite.com\"\n          />\n          {errors.website?.type === 'required' && (\n            <span className=\"error-message\">This field is required</span>\n          )}\n        </div>\n        <div className={`input-group required ${errors.budget ? 'error' : ''}`}>\n          <label htmlFor=\"budget\">Orientačný mesačný rozpočet</label>\n          <select\n            {...register('budget')}\n            defaultValue={state.data.budget}\n            name=\"budget\"\n            id=\"budget\"\n          >\n            <option value=\"\">Select an option</option>\n            <option value=\"500\">500$</option>\n            <option value=\"1000\">1000$</option>\n            <option value=\"1500\">1500$</option>\n          </select>\n          {errors.budget?.type === 'required' && (\n            <span className=\"error-message\">This field is required</span>\n          )}\n        </div>\n        <div className=\"button-container\">\n          <button style={{ visibility: 'hidden' }} className=\"secondary\">\n            Späť\n          </button>\n          <button type=\"submit\" className=\"primary\">\n            Ďalej\n          </button>\n        </div>\n      </form>\n    </>\n  )\n}\n","import { ProgressSteps } from '../progress-steps'\nimport { useNavigate } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { useStateMachine } from 'little-state-machine'\nimport updateAction from '../updateAction'\nimport * as yup from 'yup'\n\nconst schema = yup\n  .object({\n    service: yup.array()\n  })\n  .required()\n\nexport const Step2 = () => {\n  let navigate = useNavigate()\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(schema)\n  })\n\n  const watchService = watch('service')\n  const { actions } = useStateMachine({ updateAction })\n\n  const onSubmit = data => {\n    actions.updateAction(data)\n    navigate('/step3')\n  }\n\n  const servicesArray = [\n    'Výkonnostný marketing',\n    'WEB & UX',\n    'Online Export',\n    'Marketing v zahraničí',\n    'SEO',\n    'Magic Hiring',\n    'Budovanie značky',\n    'Provízna spolupráca'\n  ]\n\n  return (\n    <>\n      <ProgressSteps stepNum={2} />\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <fieldset>\n          <legend>\n            Vyberte, o čo máte záujem a nebojte sa označiť viac možností\n          </legend>\n          <div className=\"services-list\">\n            {servicesArray.map(service => (\n              <div\n                className={`checkbox ${\n                  watchService && watchService.indexOf(service) > -1\n                    ? 'checked'\n                    : ''\n                }`}\n                key={service}\n              >\n                <input\n                  type=\"checkbox\"\n                  name=\"service[]\"\n                  id={service}\n                  value={service}\n                  {...register('service')}\n                />\n                <label htmlFor={service}>{service}</label>\n              </div>\n            ))}\n          </div>\n        </fieldset>\n        <div className=\"button-container\">\n          <button onClick={() => navigate('/step1')} className=\"secondary\">\n            Späť\n          </button>\n          <button type=\"submit\" className=\"primary\">\n            Ďalej\n          </button>\n        </div>\n      </form>\n    </>\n  )\n}\n","import { ProgressSteps } from '../progress-steps'\nimport { useNavigate } from 'react-router-dom'\nimport * as yup from 'yup'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { useStateMachine } from 'little-state-machine'\nimport updateAction from '../updateAction'\n\nconst schema = yup\n  .object({\n    description: yup.string().required('Description is required')\n  })\n  .required()\n\nexport const Step3 = () => {\n  let navigate = useNavigate()\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(schema)\n  })\n\n  const { actions, state } = useStateMachine({ updateAction })\n\n  const onSubmit = data => {\n    actions.updateAction(data)\n    alert(JSON.stringify(state, null, 2))\n  }\n\n  return (\n    <>\n      <ProgressSteps stepNum={3} />\n      <form onSubmit={handleSubmit(onSubmit)} className=\"form-container\">\n        <div className=\"textarea required error\">\n          <label htmlFor=\"description\">Vaša správa a doplňujúce podklady</label>\n          <textarea\n            name=\"description\"\n            {...register('description')}\n            defaultValue={state.data.description}\n            id=\"description\"\n            cols=\"30\"\n            rows=\"8\"\n            placeholder=\"Hello, I have a wonderful bizňis for u.\"\n          />\n          {errors.description && (\n            <span className=\"error-message\">{errors.description.message}</span>\n          )}\n        </div>\n        <div className=\"file-input\">\n          <input type=\"file\" placeholder=\"Nie je vybratý žiadný súbor\" />\n        </div>\n        <div className=\"button-container\">\n          <button onClick={() => navigate('/step2')} className=\"secondary\">\n            Späť\n          </button>\n          <button className=\"primary\">Ďalej</button>\n        </div>\n      </form>\n    </>\n  )\n}\n","import React from 'react'\n\nexport const H1 = () => {\n  return <h1>Pripravení na rast?</h1>\n}\n","import React from 'react'\n\nexport const H2 = () => {\n  return (\n    <h2>\n      Vykročte smerom k zahraničnej expanzii vášho biznisu.{' '}\n      <strong>Na účet Dexfinity a bez záväzkov.</strong>\n    </h2>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom'\nimport { StateMachineProvider, createStore } from 'little-state-machine'\nimport { Step1 } from './steps/Step1'\nimport { Step2 } from './steps/Step2'\nimport { Step3 } from './steps/Step3'\nimport { H1 } from './components/headings/H1'\nimport { H2 } from './components/headings/H2'\nimport './App.scss'\n\ncreateStore({\n  data: {}\n})\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <StateMachineProvider>\n        <div className=\"container\">\n          <H1 />\n          <H2 />\n          <Routes>\n            <Route exact path=\"/\" element={<Step1 />} />\n            <Route path=\"/step1\" element={<Step1 />} />\n            <Route path=\"/step2\" element={<Step2 />} />\n            <Route path=\"/step3\" element={<Step3 />} />\n          </Routes>\n        </div>\n      </StateMachineProvider>\n    </BrowserRouter>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}